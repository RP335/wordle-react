{"ast":null,"code":"var _jsxFileName = \"/Users/rahul.peter/Documents/front-end-learning/wordle/wordle-app/src/components/Board.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = props => {\n  const renderSquare = (value, renderingRow, mainIndex) => {\n    let color = '';\n    color = props.prevColoredSquares[mainIndex];\n    let flip = false;\n    if (props.currRow - 1 === renderingRow) flip = true;\n    return flip ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square\",\n      style: {\n        background: `${color}`\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square animated\",\n      style: {\n        background: `${color}`\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  };\n\n  let count = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [...Array(6)].map((elem, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [...Array(5)].map((elem, j) => {\n        count++;\n        return renderSquare(props.squares[count - 1], i, count - 1);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Board","props","renderSquare","value","renderingRow","mainIndex","color","prevColoredSquares","flip","currRow","background","count","Array","map","elem","i","j","squares"],"sources":["/Users/rahul.peter/Documents/front-end-learning/wordle/wordle-app/src/components/Board.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nconst Board = (props) =>{\n\n    \n    const renderSquare = (value, renderingRow, mainIndex) => {\n\n        let color = '';\n        \n        color = props.prevColoredSquares[mainIndex];\n        let flip = false;\n        if (props.currRow-1 === renderingRow)\n            flip = true;\n        return (\n            flip? <div className='square' style = {{background :`${color}`}}>{value}</div>:\n            <div className='square animated' style = {{background :`${color}`}}>{value}</div>\n        \n        )\n    }\n    let count = 0;\n    return (\n        <div className='board'>\n            {[...Array(6)].map((elem, i) =>(\n                <div className='board-row'>\n                    {[...Array(5)].map((elem, j) => {\n                        count++;\n                        return renderSquare(props.squares[count-1], i, count-1);\n                })}\n                </div>\n            ))}\n        </div>\n    )\n\n\n}\nexport default Board;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAU;EAGpB,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,YAAR,EAAsBC,SAAtB,KAAoC;IAErD,IAAIC,KAAK,GAAG,EAAZ;IAEAA,KAAK,GAAGL,KAAK,CAACM,kBAAN,CAAyBF,SAAzB,CAAR;IACA,IAAIG,IAAI,GAAG,KAAX;IACA,IAAIP,KAAK,CAACQ,OAAN,GAAc,CAAd,KAAoBL,YAAxB,EACII,IAAI,GAAG,IAAP;IACJ,OACIA,IAAI,gBAAE;MAAK,SAAS,EAAC,QAAf;MAAwB,KAAK,EAAI;QAACE,UAAU,EAAG,GAAEJ,KAAM;MAAtB,CAAjC;MAAA,UAA4DH;IAA5D;MAAA;MAAA;MAAA;IAAA,QAAF,gBACJ;MAAK,SAAS,EAAC,iBAAf;MAAiC,KAAK,EAAI;QAACO,UAAU,EAAG,GAAEJ,KAAM;MAAtB,CAA1C;MAAA,UAAqEH;IAArE;MAAA;MAAA;MAAA;IAAA,QAFJ;EAKH,CAbD;;EAcA,IAAIQ,KAAK,GAAG,CAAZ;EACA,oBACI;IAAK,SAAS,EAAC,OAAf;IAAA,UACK,CAAC,GAAGC,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,CAACC,IAAD,EAAOC,CAAP,kBACf;MAAK,SAAS,EAAC,WAAf;MAAA,UACK,CAAC,GAAGH,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,CAACC,IAAD,EAAOE,CAAP,KAAa;QAC5BL,KAAK;QACL,OAAOT,YAAY,CAACD,KAAK,CAACgB,OAAN,CAAcN,KAAK,GAAC,CAApB,CAAD,EAAyBI,CAAzB,EAA4BJ,KAAK,GAAC,CAAlC,CAAnB;MACP,CAHI;IADL;MAAA;MAAA;MAAA;IAAA,QADH;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CAhCD;;KAAMX,K;AAiCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}