{"ast":null,"code":"var _jsxFileName = \"/Users/rahul.peter/Documents/front-end-learning/wordle/wordle-app/src/components/Board.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = props => {\n  const renderSquare = value => {\n    const ref = 'A';\n    const color = props.letters[value.charCodeAt(0) - ref.charCodeAt(0)];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square\",\n      style: {\n        background: `${color}`\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  };\n\n  let count = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [...Array(6)].map((elem, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [...Array(5)].map((elem, j) => {\n        count++;\n        return renderSquare(props.squares[count - 1]);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Board","props","renderSquare","value","ref","color","letters","charCodeAt","background","count","Array","map","elem","i","j","squares"],"sources":["/Users/rahul.peter/Documents/front-end-learning/wordle/wordle-app/src/components/Board.js"],"sourcesContent":["import React from 'react';\nconst Board = (props) =>{\n\n    const renderSquare = (value) => {\n        const ref = 'A';\n        const color = props.letters[value.charCodeAt(0) - ref.charCodeAt(0)];\n        return (\n            <div className='square' style = {{background :`${color}`}}>{value}</div>\n        )\n    }\n    let count = 0;\n    return (\n        <div className='board'>\n            {[...Array(6)].map((elem, i) =>(\n                <div className='board-row'>\n                    {[...Array(5)].map((elem, j) => {\n                        count++;\n                        return renderSquare(props.squares[count-1]);\n                })}\n                </div>\n            ))}\n        </div>\n    )\n\n\n}\nexport default Board;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAU;EAEpB,MAAMC,YAAY,GAAIC,KAAD,IAAW;IAC5B,MAAMC,GAAG,GAAG,GAAZ;IACA,MAAMC,KAAK,GAAGJ,KAAK,CAACK,OAAN,CAAcH,KAAK,CAACI,UAAN,CAAiB,CAAjB,IAAsBH,GAAG,CAACG,UAAJ,CAAe,CAAf,CAApC,CAAd;IACA,oBACI;MAAK,SAAS,EAAC,QAAf;MAAwB,KAAK,EAAI;QAACC,UAAU,EAAG,GAAEH,KAAM;MAAtB,CAAjC;MAAA,UAA4DF;IAA5D;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH,CAND;;EAOA,IAAIM,KAAK,GAAG,CAAZ;EACA,oBACI;IAAK,SAAS,EAAC,OAAf;IAAA,UACK,CAAC,GAAGC,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,CAACC,IAAD,EAAOC,CAAP,kBACf;MAAK,SAAS,EAAC,WAAf;MAAA,UACK,CAAC,GAAGH,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,CAACC,IAAD,EAAOE,CAAP,KAAa;QAC5BL,KAAK;QACL,OAAOP,YAAY,CAACD,KAAK,CAACc,OAAN,CAAcN,KAAK,GAAC,CAApB,CAAD,CAAnB;MACP,CAHI;IADL;MAAA;MAAA;MAAA;IAAA,QADH;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CAxBD;;KAAMT,K;AAyBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}