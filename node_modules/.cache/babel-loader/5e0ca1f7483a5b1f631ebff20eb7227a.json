{"ast":null,"code":"var _jsxFileName = \"/Users/rahul.peter/Documents/front-end-learning/wordle/wordle-app/src/components/Board.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet words;\n\nvar checkWord = require('check-if-word');\n\nwords = checkWord('en');\n\nconst Board = props => {\n  const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n  const renderSquare = (value, renderingRow, mainIndex) => {\n    let color = '';\n    color = props.prevColoredSquares[mainIndex];\n    let flip = false;\n    if (props.currRow - 1 === renderingRow) flip = true;\n    sleep(2000);\n    return !flip ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square\",\n      style: {\n        background: `${color}`\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square animated\",\n      style: {\n        background: `${color}`\n      },\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  };\n\n  let count = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [...Array(6)].map((elem, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [...Array(5)].map((elem, j) => {\n        count++;\n        return renderSquare(props.squares[count - 1], i, count - 1);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","words","checkWord","require","Board","props","sleep","ms","Promise","resolve","setTimeout","renderSquare","value","renderingRow","mainIndex","color","prevColoredSquares","flip","currRow","background","count","Array","map","elem","i","j","squares"],"sources":["/Users/rahul.peter/Documents/front-end-learning/wordle/wordle-app/src/components/Board.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nlet words;\nvar checkWord = require('check-if-word');\n    words = checkWord('en');\nconst Board = (props) =>{\n\n    const sleep = ms => new Promise(\n        resolve => setTimeout(resolve, ms)\n      );\n    const renderSquare = (value, renderingRow, mainIndex) => {\n\n        let color = '';\n        \n        color = props.prevColoredSquares[mainIndex];\n       \n        let flip = false;\n        if (props.currRow-1 === renderingRow)\n            flip = true;\n        sleep(2000);\n        return (\n            !flip? <div className='square' style = {{background :`${color}`}}>{value}</div>:\n            <div className='square animated' style = {{background :`${color}`}}>{value}</div>\n        \n        )\n    }\n    let count = 0;\n    return (\n        <div className='board'>\n            {[...Array(6)].map((elem, i) =>(\n                <div className='board-row'>\n                    {[...Array(5)].map((elem, j) => {\n                        count++;\n                        return renderSquare(props.squares[count-1], i, count-1);\n                })}\n                </div>\n            ))}\n        </div>\n    )\n\n\n}\nexport default Board;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AACA,IAAIC,KAAJ;;AACA,IAAIC,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAvB;;AACIF,KAAK,GAAGC,SAAS,CAAC,IAAD,CAAjB;;AACJ,MAAME,KAAK,GAAIC,KAAD,IAAU;EAEpB,MAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAChBC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CADL,CAApB;;EAGA,MAAMI,YAAY,GAAG,CAACC,KAAD,EAAQC,YAAR,EAAsBC,SAAtB,KAAoC;IAErD,IAAIC,KAAK,GAAG,EAAZ;IAEAA,KAAK,GAAGV,KAAK,CAACW,kBAAN,CAAyBF,SAAzB,CAAR;IAEA,IAAIG,IAAI,GAAG,KAAX;IACA,IAAIZ,KAAK,CAACa,OAAN,GAAc,CAAd,KAAoBL,YAAxB,EACII,IAAI,GAAG,IAAP;IACJX,KAAK,CAAC,IAAD,CAAL;IACA,OACI,CAACW,IAAD,gBAAO;MAAK,SAAS,EAAC,QAAf;MAAwB,KAAK,EAAI;QAACE,UAAU,EAAG,GAAEJ,KAAM;MAAtB,CAAjC;MAAA,UAA4DH;IAA5D;MAAA;MAAA;MAAA;IAAA,QAAP,gBACA;MAAK,SAAS,EAAC,iBAAf;MAAiC,KAAK,EAAI;QAACO,UAAU,EAAG,GAAEJ,KAAM;MAAtB,CAA1C;MAAA,UAAqEH;IAArE;MAAA;MAAA;MAAA;IAAA,QAFJ;EAKH,CAfD;;EAgBA,IAAIQ,KAAK,GAAG,CAAZ;EACA,oBACI;IAAK,SAAS,EAAC,OAAf;IAAA,UACK,CAAC,GAAGC,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,CAACC,IAAD,EAAOC,CAAP,kBACf;MAAK,SAAS,EAAC,WAAf;MAAA,UACK,CAAC,GAAGH,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,CAACC,IAAD,EAAOE,CAAP,KAAa;QAC5BL,KAAK;QACL,OAAOT,YAAY,CAACN,KAAK,CAACqB,OAAN,CAAcN,KAAK,GAAC,CAApB,CAAD,EAAyBI,CAAzB,EAA4BJ,KAAK,GAAC,CAAlC,CAAnB;MACP,CAHI;IADL;MAAA;MAAA;MAAA;IAAA,QADH;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CApCD;;KAAMhB,K;AAqCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}