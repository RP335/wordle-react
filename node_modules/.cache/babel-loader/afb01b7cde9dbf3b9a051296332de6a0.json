{"ast":null,"code":"var _jsxFileName = \"/Users/rahul.peter/Documents/front-end-learning/wordle/wordle-app/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Board from './Board';\nimport Keypad from './Keypad';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const res = 'wendy';\n  const [currRow, setCurrRow] = useState(0);\n  const [currCol, setCurrCol] = useState(0);\n  const [currWord, setCurrWord] = useState([...Array(5).fill('')]);\n  const [squares, setSquares] = useState([...Array(30).fill('')]);\n  const [letters, setLetters] = useState([...Array(26).fill('black')]);\n\n  const handleKeypadClick = value => {\n    const currIndex = Number(currRow * 5) + Number(currCol); //console.log(currIndex);\n\n    const newSquares = [...squares];\n    newSquares[currIndex] = value;\n    setSquares([...newSquares]);\n    const newWord = [...currWord];\n    newWord[currCol] = value;\n    setCurrWord([...newWord]); //console.log(newSquares);\n\n    setCurrCol(Number(currCol % 5) + 1);\n    console.log(letters);\n\n    if (currCol + 1 === 5) {\n      setCurrRow(currRow + 1);\n      setCurrCol(0);\n      updateKeypad(currWord);\n      setCurrWord([...Array(5).fill('')]);\n    }\n  };\n\n  const updateKeypad = currWord => {\n    for (var i = 0; i < 5; i++) {\n      if (res.indexOf(currWord[i]) === i) {\n        const newLetters = [...letters];\n        const ref = 'A';\n        const index = currWord[i].charCodeAt(0) - ref.charCodeAt(0);\n        console.log(index);\n        newLetters[index] = '#538D4E';\n        setLetters(newLetters);\n      } else if (res.indexOf(currWord[i]) !== -1) {\n        const newLetters = [...letters];\n        const ref = 'A';\n        const index = currWord[i].charCodeAt(0) - ref.charCodeAt(0);\n        console.log(index);\n        newLetters[index] = '#B59F3B';\n        setLetters(newLetters);\n      } else {\n        const newLetters = [...letters];\n        const ref = 'A';\n        const index = currWord[i].charCodeAt(0) - ref.charCodeAt(0);\n        console.log(index);\n        newLetters[index] = '#3A3A3C';\n        setLetters(newLetters);\n        console.log(letters);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      squares: squares,\n      letters: letters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Keypad, {\n      handleClick: handleKeypadClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"d7/GVRHkd4w7BHR9kfcZ3JsmewQ=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Board","Keypad","Game","res","currRow","setCurrRow","currCol","setCurrCol","currWord","setCurrWord","Array","fill","squares","setSquares","letters","setLetters","handleKeypadClick","value","currIndex","Number","newSquares","newWord","console","log","updateKeypad","i","indexOf","newLetters","ref","index","charCodeAt"],"sources":["/Users/rahul.peter/Documents/front-end-learning/wordle/wordle-app/src/components/Game.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Board from './Board';\nimport Keypad from './Keypad';\nconst Game  = () =>{\n    const res = 'wendy';\n    const [currRow, setCurrRow] = useState(0);\n    const [currCol, setCurrCol] = useState(0);\n    const [currWord, setCurrWord] = useState([...Array(5).fill('')]);\n    const [squares, setSquares] = useState([...Array(30).fill('')]);\n    const [letters, setLetters] = useState([...Array(26).fill('black')])\n    const handleKeypadClick = (value) =>{\n        const currIndex = Number(currRow*5) + Number(currCol);\n        //console.log(currIndex);\n        const newSquares = [...squares];\n        newSquares[currIndex] = value;\n        setSquares([...newSquares]);\n        const newWord = [...currWord];\n        newWord[currCol] = value;\n        setCurrWord([...newWord]);\n        //console.log(newSquares);\n        setCurrCol(Number(currCol%5)+1);\n\n        console.log(letters);\n        if (currCol+1 === 5){\n            setCurrRow(currRow+1);\n            setCurrCol(0);\n            updateKeypad(currWord);\n            setCurrWord([...Array(5).fill('')]);\n        }\n    }\n    const updateKeypad = (currWord) =>{\n        for (var i = 0; i < 5; i++){\n            if (res.indexOf(currWord[i]) === i){\n                const newLetters = [...letters];\n                const ref = 'A';\n                const index = currWord[i].charCodeAt(0)-ref.charCodeAt(0);\n                console.log(index);\n                newLetters[index] = '#538D4E';\n                setLetters(newLetters);\n            }\n            else if (res.indexOf(currWord[i]) !== -1){\n                const newLetters = [...letters];\n                const ref = 'A';\n                const index = currWord[i].charCodeAt(0)-ref.charCodeAt(0);\n                console.log(index);\n                newLetters[index] = '#B59F3B';\n                setLetters(newLetters);\n            }\n            else {\n                const newLetters = [...letters];\n                const ref = 'A';\n                const index = currWord[i].charCodeAt(0)-ref.charCodeAt(0);\n                console.log(index);\n                newLetters[index] = '#3A3A3C';\n                setLetters(newLetters);\n                \n                console.log(letters);\n            }\n        }\n\n    }\n    return (\n        <div className='game'>\n            <Board squares = {squares} letters = {letters}></Board>\n            <Keypad   handleClick = {handleKeypadClick}></Keypad>\n        </div>\n        \n    )\n}\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module"}