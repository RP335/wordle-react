{"ast":null,"code":"var _jsxFileName = \"/Users/rahul.peter/Documents/front-end-learning/wordle/wordle-app/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Board from './Board';\nimport Keypad from './Keypad';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const res = 'WENDY';\n  const [currRow, setCurrRow] = useState(0);\n  const [currWord, setCurrWord] = useState('');\n  const [squares, setSquares] = useState([...Array(30).fill('')]);\n  const [letters, setLetters] = useState([...Array(26).fill('black')]);\n  const [enter, setEnter] = useState(false);\n  const [tempLetters, setTempLetters] = useState([...Array(26).fill('black')]);\n\n  const handleClickBigKey = value => {\n    if (value === 'ENTER') {\n      console.log('Enter');\n      setEnter(true);\n      updateKeypad();\n    }\n\n    if (value === 'DEL') {\n      let newWord = currWord;\n      let currIndex = currWord.length - 1 + Number(currRow * 5);\n      let newSquares = [...squares];\n      newSquares[currIndex] = '';\n      setSquares(newSquares);\n      newWord = newWord.substr(0, currWord.length - 1);\n      console.log(newWord);\n      setCurrWord(newWord);\n    }\n  };\n\n  const handleKeypadClick = value => {\n    let newWord = currWord + value;\n    console.log(currWord.length);\n\n    if (currWord.length >= 4 && enter === true) {\n      updateKeypad();\n      setCurrRow(currRow + 1);\n      setCurrWord('');\n      setEnter(false);\n    } else if (newWord.length > 5 && enter !== true) {\n      return;\n    }\n\n    setCurrWord(newWord);\n    let currIndex = currWord.length + Number(currRow * 5);\n    let newSquares = [...squares];\n    newSquares[currIndex] = value;\n    setSquares(newSquares);\n    setCurrWord(newWord);\n    const tempIndex = newWord.length - 1;\n    const target = newWord.charAt(tempIndex);\n    let newLetters = [...tempLetters];\n\n    if (target === res.charAt(tempIndex)) {\n      const a = String(target);\n      const index = Number(a.charCodeAt(0) - 'A'.charCodeAt(0));\n      newLetters[index] = '#538D4E';\n      setTempLetters(newLetters);\n    } else if (res.indexOf(target) !== -1) {\n      const a = String(target);\n      const index = Number(a.charCodeAt(0) - 'A'.charCodeAt(0));\n      newLetters[index] = '#B59F3B';\n      setTempLetters(newLetters);\n    } else {\n      const a = String(target);\n      const index = Number(a.charCodeAt(0) - 'A'.charCodeAt(0));\n      newLetters[index] = '#3A3A3C';\n      setTempLetters(newLetters);\n    }\n  };\n\n  const updateKeypad = () => {\n    setLetters(tempLetters);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      squares: squares,\n      letters: letters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Keypad, {\n      handleClick: handleKeypadClick,\n      handleClickBigKey: handleClickBigKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"m95q9jQTJjbi8E/JCYUCiNVeAGk=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Board","Keypad","Game","res","currRow","setCurrRow","currWord","setCurrWord","squares","setSquares","Array","fill","letters","setLetters","enter","setEnter","tempLetters","setTempLetters","handleClickBigKey","value","console","log","updateKeypad","newWord","currIndex","length","Number","newSquares","substr","handleKeypadClick","tempIndex","target","charAt","newLetters","a","String","index","charCodeAt","indexOf"],"sources":["/Users/rahul.peter/Documents/front-end-learning/wordle/wordle-app/src/components/Game.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Board from './Board';\nimport Keypad from './Keypad';\nconst Game  = () =>{\n    const res = 'WENDY';\n    const [currRow, setCurrRow] = useState(0);\n    \n    const [currWord, setCurrWord] = useState('');\n    const [squares, setSquares] = useState([...Array(30).fill('')]);\n    const [letters, setLetters] = useState([...Array(26).fill('black')]);\n    const [enter, setEnter] = useState(false);\n    const [tempLetters, setTempLetters] = useState([...Array(26).fill('black')]);\n    const handleClickBigKey = (value) =>{\n        if (value === 'ENTER'){\n            console.log('Enter')\n            setEnter(true);\n            updateKeypad();\n        }\n        if (value === 'DEL'){\n            let newWord = currWord;\n            let currIndex = currWord.length-1 + Number(currRow * 5);\n            let newSquares = [...squares];\n            newSquares[currIndex] = '';\n            setSquares(newSquares);\n            newWord = newWord.substr(0, currWord.length-1);\n            console.log(newWord);\n            setCurrWord(newWord);\n            \n        }\n    }\n    const handleKeypadClick = (value) =>{\n        \n        let newWord = currWord + value;\n        console.log(currWord.length);\n        if (currWord.length >= 4 && enter === true){\n            updateKeypad();\n            setCurrRow(currRow+1);\n            setCurrWord('');\n            setEnter(false);\n        }\n        else if (newWord.length >  5 && enter !== true){\n            return;\n        }\n        \n        setCurrWord(newWord);\n        let currIndex = currWord.length + Number(currRow * 5);\n        let newSquares = [...squares];\n        newSquares[currIndex] = value;\n        setSquares(newSquares); \n        setCurrWord(newWord);\n        const tempIndex = newWord.length-1;\n        const target = newWord.charAt(tempIndex);\n        let newLetters = [...tempLetters];\n        if (target === res.charAt(tempIndex)) {\n            const a = String(target);\n            const index = Number(a.charCodeAt(0)-'A'.charCodeAt(0));\n            newLetters[index] = '#538D4E';\n            setTempLetters(newLetters);\n\n        }\n        else if (res.indexOf(target) !== -1){\n            const a = String(target);\n            const index = Number(a.charCodeAt(0)-'A'.charCodeAt(0));\n            newLetters[index] = '#B59F3B'\n            setTempLetters(newLetters);\n\n\n        }\n        else {\n            const a = String(target);\n            const index = Number(a.charCodeAt(0)-'A'.charCodeAt(0));\n            newLetters[index] = '#3A3A3C'\n\n            setTempLetters(newLetters);\n\n        }\n        \n        \n    }\n    const updateKeypad = () => {\n       setLetters(tempLetters);\n          \n\n    }\n    return (\n        <div className='game'>\n            <Board squares = {squares} letters = {letters}></Board>\n            <Keypad   handleClick = {handleKeypadClick} handleClickBigKey ={handleClickBigKey}></Keypad>\n        </div>\n        \n    )\n}\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module"}